"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[812],{9616:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>x,contentTitle:()=>u,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var t=n(5893),o=n(1151),i=n(7294),s=n(6550);const d={apiTable:"apiTable_e8hp"};function a(e,r){let{name:n,children:o}=e;const d=function(e){let r=e;for(;(0,i.isValidElement)(r);)[r]=i.Children.toArray(r.props.children);return r}(o),a=n?`${n}-${d}`:d,c=`#${a}`,h=(0,s.k6)();return(0,t.jsx)("tr",{id:a,tabIndex:0,ref:h.location.hash===c?r:void 0,onClick:e=>{"A"===e.target.tagName.toUpperCase()||h.push(c)},onKeyDown:e=>{"Enter"===e.key&&h.push(c)},children:o.props.children})}const c=i.forwardRef(a);function h(e){let{children:r,name:n}=e;const[o,s]=i.Children.toArray(r.props.children),a=(0,i.useRef)(null);(0,i.useEffect)((()=>{a.current?.focus()}),[a]);const h=i.Children.map(s.props.children,(e=>(0,t.jsx)(c,{name:n,ref:a,children:e})));return(0,t.jsxs)("table",{className:d.apiTable,children:[o,(0,t.jsx)("tbody",{children:h})]})}const l={sidebar_position:4},u="Runtime errors",p={id:"runtime-errors",title:"Runtime errors",description:"Why does ChartKit generate its own exceptions?",source:"@site/docs/runtime-errors.md",sourceDirName:".",slug:"/runtime-errors",permalink:"/chartkit/docs/runtime-errors",draft:!1,unlisted:!1,editUrl:"https://github.com/gravity-ui/chartkit/tree/main/documentation/docs/runtime-errors.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docSidebar",previous:{title:"External plugins",permalink:"/chartkit/docs/plugins/external"}},x={},m=[{value:"Why does ChartKit generate its own exceptions?",id:"why-does-chartkit-generate-its-own-exceptions",level:2},{value:"Error codes",id:"error-codes",level:2},{value:"Working with errors",id:"working-with-errors",level:2},{value:"<code>onError</code> callback",id:"onerror-callback",level:3},{value:"<code>renderError</code> method",id:"rendererror-method",level:3},{value:"Custom generation of the <code>ChartKitError</code> error",id:"custom-generation-of-the-chartkiterror-error",level:3}];function j(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"runtime-errors",children:"Runtime errors"}),"\n",(0,t.jsx)(r.h2,{id:"why-does-chartkit-generate-its-own-exceptions",children:"Why does ChartKit generate its own exceptions?"}),"\n",(0,t.jsx)(r.p,{children:"During the execution of the program, many different errors may occur, including due to incorrect settings or data that come to ChartKit. In order to make the debug of such problems more transparent, ChartKit throws exceptions itself when it realizes that the component will not be rendered and will break in the depths of its code or (even worse) will be rendered incorrectly."}),"\n",(0,t.jsxs)(r.p,{children:["The ChartKit exception is a wrapper over a native object ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Error",children:"Error"}),", which adds the fields ",(0,t.jsx)(r.code,{children:"code"})," and ",(0,t.jsx)(r.code,{children:"isCustomError"}),"."]}),"\n",(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsxs)(r.p,{children:["All exceptions that occur inside the ChartKit component are caught in the internal ",(0,t.jsx)(r.code,{children:"ErrorBoundary"}),"."]})}),"\n",(0,t.jsx)(r.h2,{id:"error-codes",children:"Error codes"}),"\n",(0,t.jsx)(h,{children:(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"\u041a\u043e\u0434"}),(0,t.jsx)(r.th,{children:"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"ERR.CK.NO_DATA"})}),(0,t.jsx)(r.td,{children:"No data available."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"ERR.CK.INVALID_DATA"})}),(0,t.jsx)(r.td,{children:"Incorrect settings or data. With this error code, as a rule, there is a description of the problem area."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"ERR.CK.UNKNOWN_PLUGIN"})}),(0,t.jsx)(r.td,{children:"Invalid `type'. As a rule, it occurs due to the fact that the plugin has not been registered."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"ERR.CK.UNKNOWN_ERROR"})}),(0,t.jsx)(r.td,{children:"Unknown error."})]})]})]})}),"\n",(0,t.jsx)(r.h2,{id:"working-with-errors",children:"Working with errors"}),"\n",(0,t.jsxs)(r.h3,{id:"onerror-callback",children:[(0,t.jsx)(r.code,{children:"onError"})," callback"]}),"\n",(0,t.jsxs)(r.p,{children:["Called when an error occurs within the ChartKit component, which has risen to an internal ",(0,t.jsx)(r.code,{children:"ErrorBoundary"}),"."]}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsx)(r.p,{children:"This method, for example, can be used to show information that there is no data for the chart and draw instructions on how to get this data."})}),"\n",(0,t.jsx)(r.p,{children:"Usage example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:'import {isChartKitError} from "@gravity-ui/chartkit";\n\n...\n\n<ChartKit\n  type="d3"\n  data={data}\n  onError={({error}) => {\n    if (isChartKitError(error)) {\n        // This is where the type is narrowed down to ChartKitError,\n        // so typescript will allow you to access error.code\n    }\n  }}\n/>\n'})}),"\n",(0,t.jsxs)(r.h3,{id:"rendererror-method",children:[(0,t.jsx)(r.code,{children:"renderError"})," method"]}),"\n",(0,t.jsx)(r.p,{children:"It is used to render a custom error component. The error text is displayed by default."}),"\n",(0,t.jsx)(r.p,{children:"Usage example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:'...\n\n<ChartKit\n  type="d3"\n  data={data}\n  renderError={({message, resetError}) => {\n    const handleRetry = () => {\n        // Application-side business logic that will help collect data in a new way\n        ...\n        // Resetting an error in the ChartKit component\n        resetError();\n    };\n    return (\n        <div>\n            <div>{message}</div>\n            <button onClick={handleRetry}></button>\n        </div>\n    );\n  }}\n/>\n'})}),"\n",(0,t.jsxs)(r.h3,{id:"custom-generation-of-the-chartkiterror-error",children:["Custom generation of the ",(0,t.jsx)(r.code,{children:"ChartKitError"})," error"]}),"\n",(0,t.jsxs)(r.p,{children:["You can also throw a ",(0,t.jsx)(r.code,{children:"ChartKitError"})," in your code, specifying the desired code and message. This can be useful when writing your own plugin."]}),"\n",(0,t.jsx)(r.p,{children:"Usage example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import {ChartKitError, CHARTKIT_ERROR_CODE} from '@gravity-ui/chartkit';\n\n...\n\nthrow new ChartKitError({\n    // You can use any string here\n    code: CHARTKIT_ERROR_CODE.INVALID_DATA,\n    message: 'Invalid data',\n});\n"})})]})}function g(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>d,a:()=>s});var t=n(7294);const o={},i=t.createContext(o);function s(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);